
package gui;
import javax.swing.JFrame;
import javax.swing.JButton;
import javax.swing.JPanel;


public class GUI {
    public static void main(String[] args) {
        
        JFrame frame = new JFrame ("Welcome to UMeasure");
        frame.setVisible(true);
        frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        frame.setSize(300,300);
        JPanel panel = new JPanel(); 
        frame.add(panel);
        JButton button = new JButton ("Menu");
        panel.add(button);
        
 
    }
        
       
    } 
--------------------------------------------------------------------------------------------------------------


import javax.swing.*; 
import java.awt.*; 
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
/*import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.InputMismatchException;
import java.util.Scanner;*/



public class MainClass{

    private static int n;
    
    
    
    private JFrame f; 
    private JPanel p; 
    private JButton b1; 
    private JLabel lab;
    
    int[] arr = {1, 2, 3, 4, 5}; 
    
    public void gui()
    {
        
        f = new JFrame ("Sarah");
        f.setVisible (true);
        f.setSize(600,400);
        f.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        
        p= new JPanel ();
        p.setBackground(Color.BLUE);
        
        b1= new JButton ("Hello World");
        lab= new JLabel ("click on me!");
        
        p.add(b1);
        p.add(lab);
        
        f.add(p);
        
        b1.addActionListener(new ActionListener(){
            
            public void actionPerformed(ActionEvent e){
                JOptionPane.showMessageDialog(null, "goodbye" );
            }
        });
        
    }
    

    
   public static void main(String [] args)
   {
  MainClass frame = new MainClass();
  frame.gui();

   }
   
}

------------------------------------------------------------------------------------------------------------------------

package code;
import javax.swing.*;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;

import javax.swing.JFrame;


class calc extends Jframe {

      public void actionPerformed(ActionEvent e){
 
            }
    
}


public class Jframe {

    public void gui(){
     JFrame f = new JFrame("Umeausre");
     f.setSize(500,300);
 
     f.setVisible(true); 
     JPanel MyPanel =  new JPanel();   
     JLabel L = new JLabel("MASS");
     JPanel P =  new JPanel();                   
     P.add(L);
    f.getContentPane().add(P);
   // P.setBackground(Color.YELLOW); 
   
    JButton Convert= new JButton ("CONVERT");
    P.add(Convert);
    Convert.setSize(10,20);
   
    JTextField m_value= new JTextField ();
    TextField t1,t2;  
    t1=new TextField("Enter a value");  
    t1.setBounds(50,100, 90,30);  
    t2=new TextField("result");  
    t2.setBounds(50,150, 90,30);  
    P.add(t1); P.add(t2); 
    String [] list = {"mg to g", "mg to kg", "g to mg", "g to kg","kg to mg","kg to g"  };
    
  
    JComboBox m_choice = new JComboBox(list); 
    P.add(m_choice);
    m_choice.setBounds(300, 100,90, 20);
    
    double m= 1000;
    double n = 1000000;
    double mass1 = Double.parseDouble(t1.getText());
    
    
    Convert.addActionListener(new ActionListener(){
            
            public void actionPerformed(ActionEvent e){
                
                
                
                
                
                
            }
        });
        
    }

    public static void main(String[] args) {
        
        Jframe frame = new Jframe();
        frame.gui(); 
        
        
        
    }
 
    }

----------------------------------------------------------------------------------------------------------------------------------

Temp + Dist



//temperature
JTextField temp_value= new JTextField ();
    P_Temp.setBackground(Color.PINK); 
    JButton temp_Convert= new JButton ("CONVERT");
    P_temp.add(t_Convert);
    temp_Convert.setSize(10,20);


   TextField temp_temp1, temp_temp2
     temp_temp1=new TextField("Enter a value");  
    temp_temp1.setBounds(50,100, 90,30);  
    temp_temp2=new TextField("result");  
    temp_temp2.setBounds(50,150, 90,30);  
    P_Temp.add(temp_temp1); 
    P_Temp.add(temp_temp2); 
    String [] temp_list = {“Fahrenheit to Celsius”, “Celsius to Fahrenheit” };
    JComboBox temp_choice = new JComboBox(temp_ list); 
    P_Temp.add(temp_choice);
    temp_ choice.setBounds(300, 100,90, 20);





//distance (length)
JTextField dist_value= new JTextField ();
    P_Dist.setBackground(Color.YELLOW); 
    JButton dist_Convert= new JButton ("CONVERT");
    P_Dist.add(dist_Convert);
    dist_Convert.setSize(10,20);
    
    
    TextField dist_dist1,dist_dist2;  
    dist_dist1=new TextField("Enter a value");  
    dist_dist1.setBounds(50,100, 90,30);  
    dist_dist2=new TextField("result");  
    dist_dist2.setBounds(50,150, 90,30);  
    P_Dist.add(dist_dist1); 
    P_Dist.add(dist_dist2); 
    String [] dist_list = {"Centimeters to Meters”, “Centimeters to Kilometers”, “Meters to Centimeters”, “Meters to Kilometers”, “Kilometers to Centimeters”, “Kilometers to Meters”};
    JComboBox dist_choice = new JComboBox(Dist_list); 
    P_Dist.add(dist_choice);
    dist_choice.setBounds(300, 100,90, 20);

------------------------------------------------------------------------------------------------------------------------------
package code;
import javax.swing.*;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;

import javax.swing.JFrame;

class tabbedpanels extends Jframe {
    public void gui(){
   
     f.setSize(500,300);

 
     f.setVisible(true); 
     
    f.getContentPane().add(tabs);
    
    //for the MASS tab 
    P_mass.setBackground(Color.YELLOW); 
    JButton Convert= new JButton ("CONVERT");
    P_mass.add(Convert);
    Convert.setSize(10,20);
    JTextField m_value= new JTextField ();
    TextField m_t1,m_t2;  
    m_t1=new TextField("Enter a value");  
    m_t1.setBounds(50,100, 90,30);  
    m_t2=new TextField("result");  
    m_t2.setBounds(50,150, 90,30);  
    P_mass.add(m_t1); 
    P_mass.add(m_t2); 
    String [] list = {"mg to g", "mg to kg", "g to mg", "g to kg","kg to mg","kg to g"  };
    JComboBox m_choice = new JComboBox(list); 
    P_mass.add(m_choice);
    m_choice.setBounds(300, 100,90, 20);
   
    
    //for the TIME tab 
    JTextField t_value= new JTextField ();
    P_Time.setBackground(Color.GREEN); 
    JButton t_Convert= new JButton ("CONVERT");
    P_Time.add(t_Convert);
    t_Convert.setSize(10,20);
    
    
    
    TextField t_t1,t_t2;  
    t_t1=new TextField("Enter a value");  
    t_t1.setBounds(50,100, 90,30);  
    t_t2=new TextField("result");  
    t_t2.setBounds(50,150, 90,30);  
    P_Time.add(t_t1); 
    P_Time.add(t_t2); 
    String [] time_list = {"seconds to minutes", "seconds to hours", "minutes to seconds", "minutes to hours","hours to seconds","hours to minutes"  };
    JComboBox t_choice = new JComboBox(time_list); 
    P_Time.add(t_choice);
    t_choice.setBounds(300, 100,90, 20);
    
 
    // FOR THE DISTANCE TAB 
    
    JTextField dist_value= new JTextField ();
    P_Dist.setBackground(Color.RED); 
    JButton dist_Convert= new JButton ("CONVERT");
    P_Dist.add(dist_Convert);
    dist_Convert.setSize(10,20);
    
    
    TextField dist_dist1,dist_dist2;  
    dist_dist1=new TextField("Enter a value");  
    dist_dist1.setBounds(50,100, 90,30);  
    dist_dist2=new TextField("result");  
    dist_dist2.setBounds(50,150, 90,30);  
    P_Dist.add(dist_dist1); 
    P_Dist.add(dist_dist2); 
    String [] dist_list = {"Centimeters to Meters", "Centimeters to Kilometers", "Meters to Centimeters", "Meters to Kilometers", "Kilometers to Centimeters", "Kilometers to Meters"};
    JComboBox dist_choice = new JComboBox(dist_list); 
    P_Dist.add(dist_choice);
    dist_choice.setBounds(300, 100,90, 20);
    
    //temperature
    P_Temp.setBackground(Color.PINK); 
    JTextField temp_value= new JTextField (); 
    JButton temp_Convert= new JButton ("CONVERT");
    P_Temp.add(temp_Convert);
    temp_Convert.setSize(10,20);


    TextField temp_temp1, temp_temp2;
    temp_temp1=new TextField("Enter a value");  
    temp_temp1.setBounds(50,100, 90,30);  
    temp_temp2=new TextField("result");  
    temp_temp2.setBounds(50,150, 90,30);  
    P_Temp.add(temp_temp1); 
    P_Temp.add(temp_temp2); 
    String [] temp_list = {"Fahrenheit to Celsius", "Celsius to Fahrenheit" };
    JComboBox temp_choice = new JComboBox(temp_list); 
    P_Temp.add(temp_choice);
    temp_choice.setBounds(300, 100,90, 20);
    
     tabs.addTab("MASS", P_mass);
     tabs.addTab("TIME", P_Time);
     tabs.addTab("DISTANCE", P_Dist);
     tabs.addTab("TEMPERATURE", P_Temp);
     tabs.addTab("SI UNIT TABLE", P_Table ); 

    }
 
   
   /* public static void m_ConvertClicked {   // 
    if (e.getSource()== Convert){
          
         if (m_choice.getSelectedItem().equals("mg to g")){
            //mg divide by 1000
            double mg2g = mass1/m;
            String value=String.format("%.3f", mg2g);
             M_Result.setText(value);     
        }
            
          else if (m_choice.getSelectedItem().equals("mg to kg")){
            double mg2kg = mass1/1000000;
            String value = String.format("%.6f", mg2kg);
             M_Result.setText(value);
        }
        
        else if (m_choice.getSelectedItem().equals("g to mg")){
            double g2mg = mass1*m;
            String value = String.format("%.3f", g2mg);
             M_Result.setText(value); 
        }
        
         else if (m_choice.getSelectedItem().equals("g to kg")){
            double g2kg = mass1/m;
            String value = String.format("%.3f", g2kg);
             M_Result.setText(value); 
        }
          
        else if ( m_choice.getSelectedItem().equals("kg to mg")){
            double kg2mg = mass1*n;
            String value = String.format("%.3f", kg2mg);
             M_Result.setText(value);
        }
        
        else {
            double kg2g = mass1*m;
            String value = String.format("%.3f", kg2g);
             M_Result.setText(value); 
        }
    }
    }
    

    public static void t_ConvertClicked {
    
    
    if (e.getSource()== t_Convert){
    
    if (t_choice.getSelectedItem().equals("Seconds to Minutes")){
            //calculations here
            double S2M= time/s;

            String value = String.format("%.2f",S2M );

            T_Result.setText(value);     
        }

        else if (t_choice.getSelectedItem().equals("Seconds to Hours")){

            double S2H = time/h;

            String value = String.format("%.6f", S2H);

           T_Result.setText(value); 
        }
        
        else if (t_choice.getSelectedItem().equals("Minutes to Seconds")){

            double M2S = time*s;
            
            String value = String.format("%.2f", M2S);

            T_Result.setText(value); 
        }
        
        else if (t_choice.getSelectedItem().equals("Minutes to Hours")){

            double M2H = time/s;

            String value = String.format("%.2f", M2H);

            T_Result.setText(value); 
        }
        
        else if (t_choice.getSelectedItem().equals("Hours to Minutes")){

            double H2M = time*s;

            String value = String.format("%.2f", H2M);

            T_Result.setText(value); 

        }
        
        else {

            double H2S = time*h;

            String value = String.format("%.2f", H2S );

           T_Result.setText(value); 
        }


    
    }
}
   
    public static void dist_ConvertClicked {
   
    
    double dist = Double.parseDouble(DistValueInput.getText()); //mass is example use correlating unit

        if (DistComboBox.getSelectedItem().equals("Cm to M")){
            //calculations here
            double CM2M = dist/100;

            String value = String.format("%.2f",CM2M );

            DistReturnedValue.setText(value);     
        }

        else if (DistComboBox.getSelectedItem().equals("Cm to Km")){

            double CM2KM = dist/100;

            String value = String.format("%.2f", CM2KM);

            DistReturnedValue.setText(value); 
        }
        
        else if (DistComboBox.getSelectedItem().equals("M to Cm")){

            double M2CM = dist*100;

            String value = String.format("%.2f", M2CM);

            DistReturnedValue.setText(value); 
        }
        
        else if (DistComboBox.getSelectedItem().equals("M to Km")){

            double M2KM = dist*1000;

            String value = String.format("%.2f", M2KM);

            DistReturnedValue.setText(value); 
        }
        
        else if (DistComboBox.getSelectedItem().equals("Km to Cm")){

            double KM2CM = dist*1000;

            String value = String.format("%.2f", KM2CM );

            DistReturnedValue.setText(value); 
        }

        else if (DistComboBox.getSelectedItem().equals("Km to M")){

            double KM2M = dist*100;

            String value = String.format("%.2f", KM2M);

            DistReturnedValue.setText(value); 

        }
      

   
    
    
    }
    
    
    
    
    
    
    
    
    */ 
    
    
    
      
    
    
    
    
    
    
}


public class Jframe {

     double m = 1000;
     double n =1000000;
     double h = 3600; 
     double s =60;
     JTabbedPane tabs= new JTabbedPane ();
     JLabel L = new JLabel("MASS");
     JPanel P_mass =  new JPanel();
   
     JPanel P_Time =  new JPanel();
     JPanel P_Dist =  new JPanel();
     JPanel P_Temp =  new JPanel();
     JPanel P_Table =  new JPanel();
     JFrame f = new JFrame("Umeasure");
     
     
     
  
   
 

    public static void main(String[] args) {
        
      tabbedpanels frame = new  tabbedpanels ();
      frame.gui();
      /*m_Convert.addActionListener(new ActionListener() {
            @Override
         public void actionPerformed(java.awt.event.ActionEvent evt) {
             m_ConvertClicked (); }}); 
      
      t_Convert.addActionListener(new ActionListener(){
      public void actionPerformed(java.awt.event.ActionEvent evt)
      {
      t_ConvertClicked();
      } 
      
      }
      
      
      
      */ 
      
        
        
        
    }
 
    }
